class Solution:
    def cutRod(self, price, n):
        def solve(price,i,lnth,dp):
            if i<0:
                dp[i][lnth]=0
                return dp[i][lnth] 
            if lnth<=0:
                dp[i][lnth]=0
                return dp[i][lnth]
            if dp[i][lnth]!=-1:
                return dp[i][lnth]
            cut,no_cut=float('-inf'),float('-inf')
             
            if i+1<=lnth:
                cut=price[i]+solve(price,i,lnth-(i+1),dp)
            no_cut=solve(price,i-1,lnth,dp)
            dp[i][lnth]=max(cut,no_cut)
            return dp[i][lnth]
        
        dp=[[-1 for i in range(n+1)]for j in range(n+1)]        
        return solve(price,n-1,n,dp)
